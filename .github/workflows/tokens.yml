name: tokens
on: [push, pull_request]
jobs:
  get-manifest:
    name: Generate Build Manifest
    runs-on: ubuntu-latest
    outputs:
      manifest: ${{ steps.set-manifest.outputs.manifest }}
    steps:
      - uses: actions/checkout@v4
      - id: set-manifest
        run: python3 create_target_matrix.py >> $GITHUB_OUTPUT
  compile:
    name: Compile OpenScad Files
    needs: get-manifest
    runs-on: ubuntu-latest
    strategy:
        matrix: ${{fromJson(needs.get-manifest.outputs.manifest)}}
    steps:
      - name: Install Openscad
        run: |
          sudo apt update
          sudo apt install -y openscad
      - uses: actions/checkout@v4   
      - name: Install Fonts
        env: 
          FONTS_INSTALL_DIR: /home/runner/.local/share/fonts
        run: |
          echo "Fonts are at $FONTS_INSTALL_DIR"
          mkdir -p "$FONTS_INSTALL_DIR"
          cp -r fonts/* "$FONTS_INSTALL_DIR"
          fc-cache -f -v
      - run: mkdir -p build/${{ matrix.target }}
      - name: Compile Component
        run: openscad -o "build/${{ matrix.target }}/${{ matrix.component }}.stl" "target/${{ matrix.target }}/${{ matrix.component }}.scad"
      - name: Archive Compiled STL File
        uses: actions/upload-artifact@v4
        with:
          name: build_${{ matrix.target }}_${{ matrix.component }}
          path: |
            build
          retention-days: 1
  release-package:
    name: Generate Release Packge
    needs: compile
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4   
      - name: Download all existing artifacts
        uses: actions/download-artifact@v4
        with: 
          merge-multiple: true
          path: build
      - name: Copy Printing Instructions to Release Package
        run: cp docs/PRINTING.md build/. && cp LICENSE.txt build/.
      - name: Upload Release Package
        uses: actions/upload-artifact@v4
        with:
          name: release-package
          path: |
            build
  release:
    name: Create Github Release
    needs: release-package
    runs-on: ubuntu-latest
    if: startsWith(github.event.ref, 'refs/tags/v')
    steps:
      - name: Download Release Package Artifact
        uses: actions/download-artifact@v4
        with: 
          name: release-package
          path: swu-tokens-stl-files-${{ github.ref_name }}
      - name: Display structure of downloaded files
        run: ls -R
      - name: Create Build Tarall
        run: tar czf swu-tokens-stl-files-${{ github.ref_name }}.tar.gz swu-tokens-stl-files-${{ github.ref_name }}
      - name: Generate Github Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
           swu-tokens-stl-files-${{ github.ref_name }}.tar.gz
          tag_name: ${{ github.ref_name }}
          token: ${{ secrets.RELEASE_TOKEN_GITHUB }}
      